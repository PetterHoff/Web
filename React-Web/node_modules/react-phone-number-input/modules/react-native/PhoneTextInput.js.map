{"version":3,"file":"PhoneTextInput.js","names":["React","useCallback","PropTypes","TextInput","PhoneTextInput","_ref","ref","onChange","_ref$autoCompleteType","autoCompleteType","_ref$TextInputCompone","TextInputComponent","rest","_objectWithoutProperties","_excluded","onChangeText","value","preventDefault","defaultPrevented","target","createElement","_extends","keyboardType","forwardRef","propTypes","string","func","isRequired","elementType"],"sources":["../../source/react-native/PhoneTextInput.js"],"sourcesContent":["import React, { useCallback } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { TextInput } from 'react-native'\r\n\r\n/**\r\n * This is an _experimental_ React Native component.\r\n * Feedback thread: https://github.com/catamphetamine/react-phone-number-input/issues/296\r\n */\r\nfunction PhoneTextInput({\r\n  onChange,\r\n  // By default, shows phone number suggestion(s) when the user focuses the input field.\r\n  autoCompleteType = 'tel',\r\n  // By default, uses the default React Native `TextInput` component.\r\n  TextInputComponent = TextInput,\r\n  ...rest\r\n}, ref) {\r\n  // Instead of `onChangeText(value: string)` it could use\r\n  // `onChange(nativeEvent: Event)` and get `value` from `nativeEvent.text`.\r\n  const onChangeText = useCallback((value) => {\r\n    onChange({\r\n      preventDefault() { this.defaultPrevented = true },\r\n      target: { value }\r\n    })\r\n  }, [onChange])\r\n\r\n  // React Native `<TextInput/>` supports properties:\r\n  // * `placeholder: string?`\r\n  // * `autoFocus: boolean?`\r\n  // * `value: string?`\r\n  // plus the ones mentioned below:\r\n  return (\r\n    <TextInputComponent\r\n      ref={ref}\r\n      autoCompleteType={autoCompleteType}\r\n      keyboardType=\"phone-pad\"\r\n      onChangeText={onChangeText}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nPhoneTextInput = React.forwardRef(PhoneTextInput)\r\n\r\nPhoneTextInput.propTypes = {\r\n  /**\r\n   * The input field `value: string`.\r\n   */\r\n  value: PropTypes.string,\r\n\r\n  /**\r\n   * A function of `event: Event`.\r\n   * Updates the `value: string` property.\r\n   */\r\n  onChange: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * The standard `autoCompleteType` property of a React Native `<TextInput/>`.\r\n   */\r\n  autoCompleteType: PropTypes.string,\r\n\r\n  /**\r\n   * The input field component.\r\n   */\r\n  TextInputComponent: PropTypes.elementType\r\n}\r\n\r\nexport default PhoneTextInput\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,SAAS,QAAQ,cAAc;;AAExC;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAAAC,IAAA,EAOpBC,GAAG,EAAE;EAAA,IANNC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;IAAAC,qBAAA,GAAAH,IAAA,CAERI,gBAAgB;IAAhBA,gBAAgB,GAAAD,qBAAA,cAAG,KAAK,GAAAA,qBAAA;IAAAE,qBAAA,GAAAL,IAAA,CAExBM,kBAAkB;IAAlBA,kBAAkB,GAAAD,qBAAA,cAAGP,SAAS,GAAAO,qBAAA;IAC3BE,IAAI,GAAAC,wBAAA,CAAAR,IAAA,EAAAS,SAAA;EAEP;EACA;EACA,IAAMC,YAAY,GAAGd,WAAW,CAAC,UAACe,KAAK,EAAK;IAC1CT,QAAQ,CAAC;MACPU,cAAc,WAAAA,eAAA,EAAG;QAAE,IAAI,CAACC,gBAAgB,GAAG,IAAI;MAAC,CAAC;MACjDC,MAAM,EAAE;QAAEH,KAAK,EAALA;MAAM;IAClB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;EACA;EACA;EACA,oBACEP,KAAA,CAAAoB,aAAA,CAACT,kBAAkB,EAAAU,QAAA;IACjBf,GAAG,EAAEA,GAAI;IACTG,gBAAgB,EAAEA,gBAAiB;IACnCa,YAAY,EAAC,WAAW;IACxBP,YAAY,EAAEA;EAAa,GACvBH,IAAI,CACT,CAAC;AAEN;AAEAR,cAAc,gBAAGJ,KAAK,CAACuB,UAAU,CAACnB,cAAc,CAAC;AAEjDA,cAAc,CAACoB,SAAS,GAAG;EACzB;AACF;AACA;EACER,KAAK,EAAEd,SAAS,CAACuB,MAAM;EAEvB;AACF;AACA;AACA;EACElB,QAAQ,EAAEL,SAAS,CAACwB,IAAI,CAACC,UAAU;EAEnC;AACF;AACA;EACElB,gBAAgB,EAAEP,SAAS,CAACuB,MAAM;EAElC;AACF;AACA;EACEd,kBAAkB,EAAET,SAAS,CAAC0B;AAChC,CAAC;AAED,eAAexB,cAAc","ignoreList":[]}