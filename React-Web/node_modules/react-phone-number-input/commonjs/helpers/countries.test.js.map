{"version":3,"file":"countries.test.js","names":["_metadata","_interopRequireDefault","require","_countries","obj","__esModule","describe","it","sortCountryOptions","value","label","should","deep","equal","divider","getSupportedCountryOptions","metadata","expect","to","be","undefined","isCountrySupportedWithError","getSupportedCountries"],"sources":["../../source/helpers/countries.test.js"],"sourcesContent":["import metadata from 'libphonenumber-js/min/metadata'\r\n\r\nimport {\r\n\tsortCountryOptions,\r\n\tgetSupportedCountryOptions,\r\n\tisCountrySupportedWithError,\r\n\tgetSupportedCountries\r\n} from './countries.js'\r\n\r\ndescribe('sortCountryOptions', () => {\r\n\tit('should sort country options (no `order`)', () => {\r\n\t\tsortCountryOptions([\r\n\t\t\t{\r\n\t\t\t\tvalue: 'RU',\r\n\t\t\t\tlabel: 'Russia'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalue: 'US',\r\n\t\t\t\tlabel: 'United States'\r\n\t\t\t}\r\n\t\t]).should.deep.equal([\r\n\t\t\t{\r\n\t\t\t\tvalue: 'RU',\r\n\t\t\t\tlabel: 'Russia'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalue: 'US',\r\n\t\t\t\tlabel: 'United States'\r\n\t\t\t}\r\n\t\t])\r\n\t})\r\n\r\n\tit('should sort country options (with a divider)', () => {\r\n\t\tsortCountryOptions(\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 'RU',\r\n\t\t\t\t\tlabel: 'Russia'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 'US',\r\n\t\t\t\t\tlabel: 'United States'\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t['US', '|', 'RU']\r\n\t\t).should.deep.equal([\r\n\t\t\t{\r\n\t\t\t\tvalue: 'US',\r\n\t\t\t\tlabel: 'United States'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdivider: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalue: 'RU',\r\n\t\t\t\tlabel: 'Russia'\r\n\t\t\t}\r\n\t\t])\r\n\t})\r\n\r\n\tit('should sort country options (with \"...\")', () => {\r\n\t\tsortCountryOptions(\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 'RU',\r\n\t\t\t\t\tlabel: 'Russia'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 'US',\r\n\t\t\t\t\tlabel: 'United States'\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t['US', '|', '...']\r\n\t\t).should.deep.equal([\r\n\t\t\t{\r\n\t\t\t\tvalue: 'US',\r\n\t\t\t\tlabel: 'United States'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdivider: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalue: 'RU',\r\n\t\t\t\tlabel: 'Russia'\r\n\t\t\t}\r\n\t\t])\r\n\t})\r\n\r\n\tit('should sort country options (with \"…\")', () => {\r\n\t\tsortCountryOptions(\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 'RU',\r\n\t\t\t\t\tlabel: 'Russia'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 'US',\r\n\t\t\t\t\tlabel: 'United States'\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t['US', '|', '…']\r\n\t\t).should.deep.equal([\r\n\t\t\t{\r\n\t\t\t\tvalue: 'US',\r\n\t\t\t\tlabel: 'United States'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tdivider: true\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalue: 'RU',\r\n\t\t\t\tlabel: 'Russia'\r\n\t\t\t}\r\n\t\t])\r\n\t})\r\n\r\n\tit('should sort country options (with \"🌐\")', () => {\r\n\t\tsortCountryOptions(\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 'RU',\r\n\t\t\t\t\tlabel: 'Russia'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'International'\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tvalue: 'US',\r\n\t\t\t\t\tlabel: 'United States'\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t['US', '🌐', '…']\r\n\t\t).should.deep.equal([\r\n\t\t\t{\r\n\t\t\t\tvalue: 'US',\r\n\t\t\t\tlabel: 'United States'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'International'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tvalue: 'RU',\r\n\t\t\t\tlabel: 'Russia'\r\n\t\t\t}\r\n\t\t])\r\n\t})\r\n})\r\n\r\ndescribe('getSupportedCountryOptions', () => {\r\n\tit('should get supported country options', () => {\r\n\t\tgetSupportedCountryOptions([\r\n\t\t\t'🌐',\r\n\t\t\t'RU',\r\n\t\t\t'XX',\r\n\t\t\t'@',\r\n\t\t\t'|',\r\n\t\t\t'…',\r\n\t\t\t'...',\r\n\t\t\t'.'\r\n\t\t], metadata).should.deep.equal([\r\n\t\t\t'🌐',\r\n\t\t\t'RU',\r\n\t\t\t'|',\r\n\t\t\t'…',\r\n\t\t\t'...'\r\n\t\t])\r\n\t})\r\n\r\n\tit('should get supported country options (none supported)', () => {\r\n\t\texpect(getSupportedCountryOptions([\r\n\t\t\t'XX',\r\n\t\t\t'@',\r\n\t\t\t'.'\r\n\t\t], metadata)).to.be.undefined\r\n\t})\r\n\r\n\tit('should get supported country options (none supplied)', () => {\r\n\t\texpect(getSupportedCountryOptions(undefined, metadata)).to.be.undefined\r\n\t})\r\n\r\n\tit('should tell is country is supported with error', () => {\r\n\t\tisCountrySupportedWithError('RU', metadata).should.equal(true)\r\n\t\tisCountrySupportedWithError('XX', metadata).should.equal(false)\r\n\t})\r\n\r\n\tit('should get supported countries', () => {\r\n\t\tgetSupportedCountries(['RU', 'XX'], metadata).should.deep.equal(['RU'])\r\n\t})\r\n\r\n\tit('should get supported countries (none supported)', () => {\r\n\t\texpect(getSupportedCountries(['XX'], metadata)).to.be.undefined\r\n\t})\r\n})"],"mappings":"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","ignoreList":[]}