{"version":3,"file":"useInputKeyDownHandler.js","names":["_react","require","useInputKeyDownHandler","_ref","onKeyDown","international","useCallback","event","keyCode","BACKSPACE_KEY_CODE","target","HTMLInputElement","getCaretPosition","AFTER_LEADING_PLUS_CARET_POSITION","preventDefault","element","selectionStart","length"],"sources":["../source/useInputKeyDownHandler.js"],"sourcesContent":["import { useCallback } from 'react'\r\n\r\n// Returns a custom `onKeyDown` handler that works around a Backspace keypress edge case:\r\n// * `<PhoneInputWithCountrySelect international countryCallingCodeEditable={false}/>`\r\n// * When placing the caret before the leading plus character and pressing Backspace,\r\n//   it duplicates the country calling code in the `<input/>`.\r\n// https://github.com/catamphetamine/react-phone-number-input/issues/442\r\nexport default function useInputKeyDownHandler({\r\n\tonKeyDown,\r\n\tinternational\r\n}) {\r\n\treturn useCallback((event) => {\r\n\t\tif (event.keyCode === BACKSPACE_KEY_CODE && international) {\r\n\t\t\t// It checks `event.target` here for being an `<input/>` element\r\n\t\t\t// because \"keydown\" events may bubble from arbitrary child elements\r\n\t\t\t// so there's no guarantee that `event.target` represents an `<input/>` element.\r\n\t\t\t// Also, since `inputComponent` is not neceesarily an `<input/>`, this check is required too.\r\n\t\t\tif (event.target instanceof HTMLInputElement) {\r\n\t\t\t\tif (getCaretPosition(event.target) === AFTER_LEADING_PLUS_CARET_POSITION) {\r\n\t\t\t\t\tevent.preventDefault()\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (onKeyDown) {\r\n\t\t\tonKeyDown(event)\r\n\t\t}\r\n\t}, [\r\n\t\tonKeyDown,\r\n\t\tinternational\r\n\t])\r\n}\r\n\r\nconst BACKSPACE_KEY_CODE = 8\r\n\r\n// Gets the caret position in an `<input/>` field.\r\n// The caret position starts with `0` which means \"before the first character\".\r\nfunction getCaretPosition(element) {\r\n\treturn element.selectionStart\r\n}\r\n\r\nconst AFTER_LEADING_PLUS_CARET_POSITION = '+'.length"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA;AACA;AACA;AACA;AACA;AACe,SAASC,sBAAsBA,CAAAC,IAAA,EAG3C;EAAA,IAFFC,SAAS,GAAAD,IAAA,CAATC,SAAS;IACTC,aAAa,GAAAF,IAAA,CAAbE,aAAa;EAEb,OAAO,IAAAC,kBAAW,EAAC,UAACC,KAAK,EAAK;IAC7B,IAAIA,KAAK,CAACC,OAAO,KAAKC,kBAAkB,IAAIJ,aAAa,EAAE;MAC1D;MACA;MACA;MACA;MACA,IAAIE,KAAK,CAACG,MAAM,YAAYC,gBAAgB,EAAE;QAC7C,IAAIC,gBAAgB,CAACL,KAAK,CAACG,MAAM,CAAC,KAAKG,iCAAiC,EAAE;UACzEN,KAAK,CAACO,cAAc,CAAC,CAAC;UACtB;QACD;MACD;IACD;IACA,IAAIV,SAAS,EAAE;MACdA,SAAS,CAACG,KAAK,CAAC;IACjB;EACD,CAAC,EAAE,CACFH,SAAS,EACTC,aAAa,CACb,CAAC;AACH;AAEA,IAAMI,kBAAkB,GAAG,CAAC;;AAE5B;AACA;AACA,SAASG,gBAAgBA,CAACG,OAAO,EAAE;EAClC,OAAOA,OAAO,CAACC,cAAc;AAC9B;AAEA,IAAMH,iCAAiC,GAAG,GAAG,CAACI,MAAM","ignoreList":[]}